<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub Pages + PicGo + Typora + 自定义域名搭建免费图床</title>
    <url>/post/20210421125522.html</url>
    <content><![CDATA[<p>GitHub Pages站点大小不能超过1G，若图片太多的话可以用普通github仓库来建图床，不过这样就无法使用自己的域名。否则只能新建一个github帐号，然后再建一个专门用来存图片的GitHub Pages，如果用博客网站的同一个github帐号来建GitHub Pages图床的话，应该会与博客网站共享站点空间大小的限制。</p>
<h1 id="用同一个github帐号建图床"><a href="#用同一个github帐号建图床" class="headerlink" title="用同一个github帐号建图床"></a>用同一个github帐号建图床</h1><h2 id="建立仓库"><a href="#建立仓库" class="headerlink" title="建立仓库"></a>建立仓库</h2><p>新建一个名为img的公共仓库</p>
<p>进入Settings -&gt; Pages，设置为main分支</p>
<p>Save后就会出现 <code> Your site is published at http://www.duheweb.com/img/</code> 这样的通知。</p>
<img src="https://www.duheweb.com/img/20210421193514.png" alt="tmp" style="zoom: 50%;" />

<p>注意不勾选“Enforce HTTPS”，否则只能通过https访问，有些时候会用到http协议。</p>
<br/>

<p><strong>生成Token</strong><br>点击用户头像 –&gt; 选择 Settings。<br>点击 Developer settings。<br>点击 Personal access tokens 并点击 Generate new token 新建一个 Token。<br>填写 Token 描述，勾选 repo，然后点击 Generate token 生成一个 Token。<br>生成之后会显示Token的密钥，复制保存好。注意这个 Token 只会显示一次，自己先保存下来</p>
<br/>

<h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>下载<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p>
<p>windows下载exe结尾的</p>
<img src="https://www.duheweb.com/img/20210421193515.png" alt="image-20210421185209820" style="zoom:50%;" />



<p>picgo自带的“GitHub图床”删除图片操作不能同步到github，使用picgo-plugin-github-plus插件可以在picgo相册中删除图片时自动把github上的图片也删除了。</p>
<p>在插件设置中搜索picgo-plugin-github-plus，然后安装即可。</p>
<p>安装好插件后，在图床设置 -&gt; githubPlus中进行githubPlus设置</p>
<img src="https://www.duheweb.com/img/20210421193516.png" alt="image-20210421185438740" style="zoom:50%;" />

<p>repo就是“github用户名/仓库名”。</p>
<p>选择“设为默认图床”，然后确定。</p>
<p>版本2.2.0之后，PicGo 内部会默认开启一个小型的服务器，用于配合其他应用来调用 PicGo 进行上传。</p>
<p>打开 PicGo 详细页面，进入 PicGo 设置–设置Server</p>
<img src="https://www.duheweb.com/img/20210421193517.png" alt="tmp" style="zoom:50%;" />

<br/>

<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>版本要求：Typora 0.9.84 及以上。</p>
<img src="https://www.duheweb.com/img/20210421193518.png" alt="image-20210421185843188" style="zoom:50%;" />

<p>设置完后，点“验证图片上传选项”。<br>验证成功会显示如下结果</p>
<img src="https://www.duheweb.com/img/20210421193519.png" alt="tmp" style="zoom:50%;" />

<br/>

<p><strong>使用Typora</strong><br>上面的设置完成后，在 Typora 里插入图片时会把图片复制到本地的指定目录，待编辑完md文件后再选择格式 -&gt; 图像 -&gt;上传所有本地图片，就可以自动把md文件里的图片上传到github，并自动把图像的URL更换。不设置为插入图片就自动上传是因为上传到github后，自定义的图片URL生效需要一段时间，URL没生效时在Typora里无法预览图片。</p>
<p>注意：typora 在线预览github图片失败是因为自定义的URL还不能访问，而typora没有自动刷新远程图片的功能，稍等一下重启md文件，就能看到typora把github图片加载出来了。</p>
<h1 id="用独立的二级域名设置图片URL"><a href="#用独立的二级域名设置图片URL" class="headerlink" title="用独立的二级域名设置图片URL"></a>用独立的二级域名设置图片URL</h1><p>与上一种方法大同小异，区别在于要另外注册一个github帐号，就可以用“images.duheweb.com”这样的域名设置图片URL了。</p>
<p>这里只列出两种方法的不同处，具体细节参考上一种方法。</p>
<br/>

<p>建立仓库时，仓库名后面要以github.io结尾</p>
<img src="https://www.duheweb.com/img/20210421193520.png" alt="tmp" style="zoom:50%;" />

<br/>

<p>要到万网设置域名解析，上一种方法不用。</p>
<img src="https://www.duheweb.com/img/20210421193521.png" alt="tmp" style="zoom:50%;" />

<br/>

<p>pages设置，同样不勾选“Enforce HTTPS”</p>
<img src="https://www.duheweb.com/img/20210421193522.png" alt="tmp" style="zoom:50%;" />

<br/>

<p>picgo设置</p>
<p>注意，仓库名中的duheblog是我新建的github帐号用户名，duheblog.github.io是刚刚创建的github pages仓库。域名写刚刚解析的二级域名。</p>
<img src="https://www.duheweb.com/img/20210421193523.png" alt="image-20210421192104533" style="zoom:50%;" />

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo永久链接（Permalinks）生成方式比较</title>
    <url>/post/20210414222449.html</url>
    <content><![CDATA[<p>先说结论，Hexo生成永久链接（Permalinks）的最佳方式是在站点配置文件_config.yml中进行如下设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:year:month:day:hour:minute:second.html</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>
<hr>
<p>Hexo生成博客文章URL链接时，默认是:year/:month/:day/:title/这样的格式。如果博客文件名有中文的话，URL链接就会包含中文，复制URL路径把它粘贴到其他地方就会把中文变成一大堆乱码，使用不便而且会影响网站的SEO，同时链接层级太多也将影响SEO。</p>
<p>URL构成越简单越好，百度建议URL不要超过255字节。一个英文字符1字节，一个中文字符2字节。</p>
<h1 id="方法一：设为title"><a href="#方法一：设为title" class="headerlink" title="方法一：设为title"></a><strong>方法一：设为title</strong></h1><p>最容易想到的方法，把URL设置成如下格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:title.html</span><br></pre></td></tr></table></figure>

<p><code>:layout</code>为布局，<code>:title</code>为文件名，如果有篇名为《test-post》的文章其链接将会是这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;post&#x2F;test-post.html</span><br></pre></td></tr></table></figure>

<p>这种方法有3个缺陷：</p>
<ol>
<li><p>文章名必须为中文，这对中文博主来说很不友好，后期面对一堆全是英文名的md文件特别令人头疼。</p>
</li>
<li><p>不能改文件名，文件名一变，URL也会变化。</p>
</li>
<li><p>文件名不能起太长，否则会影响SEO，同时太长的文件名使得URL也不美观。文件名短的话其含义就会与文章标题有较大偏差，给后期维护造成混乱。</p>
</li>
</ol>
<h1 id="方法二：hexo-abbrlink插件"><a href="#方法二：hexo-abbrlink插件" class="headerlink" title="方法二：hexo-abbrlink插件"></a><strong>方法二：hexo-abbrlink插件</strong></h1><p>如果你之前有搜索过的话，可以发现这种方法有很多人推荐</p>
<p>安装hexo-abbrlink插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>

<p>站点配置文件_config.yml设置成这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: posts&#x2F;:abbrlink.html  # 此处可以自己设置，也可以直接使用 :&#x2F;abbrlink</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">    rep: dex     #进制： dec(default) and hex</span><br></pre></td></tr></table></figure>

<p>生成的链接像这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;posts&#x2F;1690090958.html</span><br></pre></td></tr></table></figure>

<p>这种方法也有缺陷：</p>
<p>重新生成的URL可能与之前不一样，喜欢双备份的人用此插件容易混淆URL。因为这种方法执行<code>hexo generate</code>才会在博客md文件的Front-matter 内增加<code>abbrlink</code>字段，这个字段就是URL的末尾。如果一篇博客耗时几天写了多个版本（V1和V2）才写完，在此期间没有执行过<code>hexo generate</code>，部署V2版本一段时间后才觉得V1版本更好，但此时V1是没有<code>abbrlink</code>字段，还得把V2的<code>abbrlink</code>复制到V2中。如果不复制，让插件再自动生成URL的话，新生成的URL可能会与以前不一样。因为即使abbrlink插件使用crc32算法生成<code>abbrlink</code>，也有重复的可能，遇到重复的情况插件会把<code>abbrlink</code>加1。那么问题来了，也许生成V2的<code>abbrlink</code>时没有加1，生成V1时却加1了，前后两个版本的URL就会不一样。</p>
<p>解释的可能有点绕，总之记住，用该插件重新生成一篇文章的URL可能与之前不一样，而实际使用中我们难免会有重新生成URL的需求。</p>
<h1 id="方法三：hexo-abbrlink2插件"><a href="#方法三：hexo-abbrlink2插件" class="headerlink" title="方法三：hexo-abbrlink2插件"></a><strong>方法三：hexo-abbrlink2插件</strong></h1><p>hexo-abbrlink的作者开发出了<a href="https://github.com/rozbo/hexo-abbrlink2">hexo-abbrlink2</a>插件，这个插件可以使URL从指定数字开始递增，像这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;posts&#x2F;1.html</span><br><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;posts&#x2F;2.html</span><br><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;posts&#x2F;3.html</span><br></pre></td></tr></table></figure>

<p>这个方法同样也有缺陷：</p>
<ol>
<li><p>同时生成多篇文章的URL时会重复，这是插件自身的bug。</p>
</li>
<li><p>与hexo-abbrlink存在同样的问题，重新生成的URL可能与之前不一样。</p>
</li>
</ol>
<h1 id="方法四：设为hash"><a href="#方法四：设为hash" class="headerlink" title="方法四：设为hash"></a><strong>方法四：设为hash</strong></h1><p>hexo-abbrlink和hexo-abbrlink2插件出现此缺陷的原因是，他们不是在创建md文件时就生成URL（即生成<code>abbrlink</code>字段），如果我们能在执行<code>hexo new</code>就生成URL，这个问题企不是就解决了。</p>
<p>查阅<a href="https://hexo.io/zh-cn/docs/permalinks">Hexo的官方文档</a>，发现还真可以，方法如下：</p>
<p>站点配置文件_config.yml设置成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:hash.html</span><br></pre></td></tr></table></figure>

<p><code>:hash</code>会根据文件名及date生成的URL，date就是文章md文件Front-matter 内的字段。生成的URL像这样</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;post&#x2F;3b48da9a3b8b.html</span><br></pre></td></tr></table></figure>

<p>似乎很完美的解决了方法二、三的缺陷，因为date是创建md文件时就生成的，URL也很简短。</p>
<p>但它同样有问题，部署后不能再更改文件名。这对博主也是个较大的限制，谁也不能保证发表前取的文件名能一直符合心意，后期稍不留神就把文件名改了，然后URL也随之变化。</p>
<h1 id="方法五：设为日期"><a href="#方法五：设为日期" class="headerlink" title="方法五：设为日期"></a><strong>方法五：设为日期</strong></h1><p><code>:hash</code>方法提醒了我们，date字段是生成URL的优良种子，我们何不用date直接生成URL呢。想到就做，把站点配置文件_config.yml设置成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:date.html</span><br></pre></td></tr></table></figure>

<p>然后执行<code>hexo generate</code>，发现会报错，因为date形如“2021-04-12 13:15:54”，中间有空格。不过这很好解决，参考Hexo的官方文档，设置成这样就可以了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:year:month:day:hour:minute:second.html</span><br></pre></td></tr></table></figure>

<p>生成的URL如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;post&#x2F;20210412131554.html</span><br></pre></td></tr></table></figure>

<p>还要注意站点配置文件中的pretty_urls设置是否是这样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>

<p>设为false的话，链接就变成了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;post&#x2F;20210412131554</span><br></pre></td></tr></table></figure>

<p>去掉URL末尾的.html，更简洁了。带不带html对SEO收录来说，影响不大，但不带html发外链的时候，有些平台编辑器会自动在URL后面加一个“/ ”造成404页面。所以，最好还是带上html，同时也能给人一种静态页面的安全感。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Quicker复制Word图片原图到其他程序</title>
    <url>/post/20210420213611.html</url>
    <content><![CDATA[<p>经常需要把搜集的资料存在word，再整理到md文件，不过直接复制出word图片到其他程序会降低图片分辨率。必须先把word里的图片另存为到本地，然后再复制粘贴到别的应用，操作步骤比较繁琐。<br>在网上找了很久都没找到解决方法，故创建了个quicker动作，以简化此操作。</p>
<br/>
先看一下效果

<img src="https://www.duheweb.com/img/20210420230733.gif" alt="word复制原图演示" style="zoom:50%;" />



<br/>

<h1 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h1><ol>
<li><p>下载注册安装<a href="https://getquicker.net/Download">quicker</a>。使用我的推荐码<code>132955-4177</code>，注册后首次付费购买专业版可获赠3个月（90天）使用时长。</p>
</li>
<li><p>到动作库复制“<a href="https://getquicker.net/Sharedaction?code=5d8583a6-cf9e-44af-796e-08d903bee990">word复制原图</a>”这个quicker动作</p>
<p><img src="https://www.duheweb.com/img/20210420230734.png" alt="image-20210420225251793"></p>
</li>
<li><p>打开Quicker面板窗口（默认是鼠标中键），在空白按钮上点右键 -&gt; 粘贴分享的动作</p>
</li>
</ol>
<img src="https://www.duheweb.com/img/20210420230735.png" alt="image-20210420230057069" style="zoom:50%;" />

<ol start="4">
<li>打开word，在想要复制的图片上激活Quicker面板，然后运行这个动作即可复制原图到剪贴板。</li>
</ol>
<p><br/><br/></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ul>
<li><p>若复制出去的图片还是比原图分辨率低，可能是因为插入word时就被压缩了，在word的文件 -&gt; 选项 -&gt; 高级里勾选“不压缩文件中的图像”。</p>
<img src="https://www.duheweb.com/img/20210421142654.png" alt="image-20210421142431810" style="zoom:50%;" /></li>
<li><p>只在word 2016上进行了测试。</p>
</li>
<li><p>若有其他问题，可在本博客页面的评论框中反馈。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Pages + Hexo + NexT + 自定义域名搭建永久有效的个人博客网站并进行SEO优化</title>
    <url>/post/20210417143744.html</url>
    <content><![CDATA[<p>为什么要建立个人博客？</p>
<ol>
<li><p>言论自由，自主权比较高，对文章的发表能有完全权限，不用再担心被第三方平台以各种政策理由删除、整改文章。</p>
</li>
<li><p>树立个人品牌，绑定自己的域名后，能有一个固定的地址引流读者。</p>
</li>
<li><p>技术自由，满足第三方平台不能提供的个性化需求，如通过插件展示相册、视频、知识库、书籍、简历等等。</p>
</li>
</ol>
<br/>



<p><strong>建立方式分析</strong></p>
<p>个人网站最关键的是域名和主机空间。</p>
<p>关于域名方面，我们的目标是建立建立一个永久有效的个人博客，为了让读者长期都能访问，一个完全受自己控制的域名必不可少。否则域名一旦变化，之前积累的读者瞬间化为乌有，很难把新域名有效传达给你的每一个读者。故为万年计，必须买一个靠谱的、长期稳定的域名，千万不要贪便宜使用某些平台的免费域名。</p>
<p>主机空间相对来说就没域名那么重要了，只要域名不变，主机随时都可以更换，完全不用担心读者会因此流失。当然，还是应尽量选择靠谱的主机空间，毕竟折腾起来也挺麻烦。</p>
<p>收费的主机，阿里云一台单核1G内存，5G网页空间，5M带宽（月流量超过200GB会限速）的云虚拟主机一年要200多，三年617，还是挺划算的，不过限定的是新客户，老客户购买就不知道有无优惠了。</p>
<p>当然，主机空间也有免费的，如：</p>
<p>GitHub Pages：GitHub提供的免费服务，平台政策稳定性不用担心，唯一缺点是国内有些地区访问延时较大，不过我实际用起来感觉速度挺正常的，不影响使用。</p>
<p>Coding Pages：其免费服务并不稳定。</p>
<p>Vercel (之前也叫 Zeit 或 now.sh)：实测其国内的访问速度与GitHub Pages 相差不大，支持自动同步GitHub仓库，如果后期想使用Vercel ，进行几步简单的操作即可从GitHub Pages迁移过来。</p>
<br/>

<p>所以前期使用GitHub Pages即可，访问量不多，没必要花钱购买主机，后期访问量增多，GitHub Pages不满足需求了，再迁移到收费主机空间上即可。</p>
<br/>

<p>下面开始GitHub Pages + 自定义域名搭建个人网站的教程。</p>
<h1 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h1><p>目前很多域名（尤其是.com）都被注册了，先买域名再注册GitHub账号，对我这样有强迫症的人来说便于统一两者的名称，否则可能注册了GitHub再去买域名，发现该域名已经被抢注了。</p>
<p>当然也可以选择不买域名，直接使用github.io地址，这样对树立个人品牌、SEO优化等就不那么方便了。</p>
<br/>

<p><strong>关于域名的选择</strong></p>
<p>国内使用最多的是com和cn，推荐大家选择购买com，因为cn国内监管严格，而且如果哪天需要把域名转到国外的域名管理商的话，cn不太受国外管理商的支持，很难转出去。而其他的小众域名如moe，me，im，blog，name等不能在国内备案，有些搜索引擎也从来不会收录一些小众的域名。同时com是使用最广泛的域名，一般输入网址，大家都默认是com结尾。并且com域名也不贵，首年50多，续费也差不多是这个价格，与其他便宜的域名比起来相差不大，可以接受。</p>
<p>到<a href="https://wanwang.aliyun.com/">万网</a>购买域名，这里不细说，推荐使用自己姓名拼音作为域名，如果被人抢注了，可以在后面加上web、blog等，比如我的域名就是duheweb.com。</p>
<p>注意，本教程使用GitHub Pages搭建个人博客网站，只买了域名，没有买云服务器、虚拟主机之类的，因此无法备案。</p>
<h1 id="本地搭建Hexo"><a href="#本地搭建Hexo" class="headerlink" title="本地搭建Hexo"></a>本地搭建Hexo</h1><p>安装 Node.js，下载地址：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p>
<p>一路下一步即可</p>
<p>打开cmd，先切换阿里的NPM镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>用 cnpm 安装 hexo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>检查一下是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>在你喜欢的位置创建一个名为“hexo”的文件夹用来存放hexo博客文件</p>
<p>进入hexo文件夹内右键打开Git Bash Here</p>
<p>在此窗口内执行后边的所有命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>初始化成功后，hexo文件夹内会出现如下的文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node_modules: 依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：生成文章的一些模板</span><br><span class="line">source：用来存放你的文章</span><br><span class="line">themes：放下下载的主题</span><br><span class="line">_config.yml: 博客的核心配置文件（设置主体、标题等属性）</span><br></pre></td></tr></table></figure>

<p>接着需要执行一下cnpm install命令，要不下边的启动会提示命令不合法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install</span><br></pre></td></tr></table></figure>

<p>最后来启动安装好的 hexo</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s –g</span><br></pre></td></tr></table></figure>

<p>直接访问<a href="http://localhost:4000/">http://localhost:4000</a></p>
<p>显示如下页面，本地博客搭建成功。</p>
<p><img src="https://www.duheweb.com/img/image-20210417184732368.png" alt="image-20210417184732368"></p>
<p>​                                                    </p>
<h1 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h1><ol>
<li><p>进入<a href="https://github.com/">GitHub</a>站点，然后进行注册(此处不做详细说明可自行阅读教程：<a href="https://jingyan.baidu.com/article/455a9950abe0ada167277864.html">注册github</a>)。</p>
</li>
<li><p>创建仓库</p>
<p>在GitHub首页右上角头像左侧加号点选择 New repository(新存储库)</p>
<p>设置仓库的名字为<code>用户名.github.io</code></p>
<p>勿设置为私有，否则会无法访问。GitHub Page对于非公开仓库是需要付费才能使用的，可以开通Pro计划，每个月4刀。</p>
<p><img src="https://www.duheweb.com/img/image-20210417220856403.png" alt="image-20210417220856403"></p>
</li>
</ol>
<h2 id="添加ssh"><a href="#添加ssh" class="headerlink" title="添加ssh"></a>添加ssh</h2><p>本地打开git bash</p>
<p>备份和移除原来的SSH key设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~&#x2F;.ssh</span><br><span class="line">ls</span><br><span class="line">#此时会显示一些文件</span><br><span class="line">mkdir key_backup</span><br><span class="line">cp id_rsa* key_backup</span><br><span class="line">rm id_rsa* </span><br></pre></td></tr></table></figure>

<p>生成密钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;duheweb@foxmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>一直enter下去，最后在(/C/Users/用户名/.ssh/id_rsa)生成了密钥<br>任意文本编辑器打开<code>id_rsa.pub</code>，Ctrl + A复制里面的所有内容，然后进入 <a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a><br>将复制的内容粘贴到Key的输入框，Title的内容可以随意，点击Add SSH key按钮即可。<br>测试一下是否成功了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>之后会要你输入yes/no，输入yes就好了。<br>设置你的账号信息:<br>真实名字，不是github用户名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br></pre></td></tr></table></figure>

<p>github邮箱</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.email &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure>



<h1 id="Hexo-托管至-GitHub"><a href="#Hexo-托管至-GitHub" class="headerlink" title="Hexo 托管至 GitHub"></a>Hexo 托管至 GitHub</h1><p>修改_config.yml文件，添加你创建的GitHub仓库地址，duheweb是我的github用户名，换成你自己的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:duheweb&#x2F;duheweb.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>安装部署命令deploy-git ，这样才能用命令部署到GitHub。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git  --save</span><br></pre></td></tr></table></figure>



<p>本地hexo/source中创建一个名为CNAME文件，不要后缀。写上你的域名。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www.duheweb.com</span><br></pre></td></tr></table></figure>

<p>上边修改完毕以后，依次执行以下命令，编译提交本地hexo文件到GitHub。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<br/>

<p>如果之前在github添加好了ssh，部署时是不会要求输入密码的，如果不想添加ssh，也可以把_config.yml文件中的repo设置成如下格式，也可以免密部署</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">repo: https:&#x2F;&#x2F;github用户名:密码@github.com&#x2F;github用户名&#x2F;github用户名.github.io.git</span><br></pre></td></tr></table></figure>



<h1 id="设置自定义域名"><a href="#设置自定义域名" class="headerlink" title="设置自定义域名"></a>设置自定义域名</h1><p>打开万网，进入域名解析设置</p>
<p>按下面红框中的内容添加5条记录，4条ip是github pages的主机地址。这个页面可以看到<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">github pages最新的ip地址</a>，添加前请确认添加的是目前github pages的最新地址。</p>
<p>我添加时github pages最新ip为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure>

<p><img src="https://www.duheweb.com/img/image-20210417191300065.png" alt="image-20210417191300065"></p>
<p>添加好后，用阿里云的<a href="https://zijian.aliyun.com/?spm=a2c1d.8251892.content.10.36ef5b7615FQdV#/domainDetect">域名检测工具</a>检测你的一级域名（如，duheweb.com）的ip是不是刚刚设置的4个。</p>
<p>当然如果有dig工具的话，也可以这样检测</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dig duheweb.com +noall +answer</span><br></pre></td></tr></table></figure>

<p>检测你的二级域名（如，<a href="http://www.duheweb.com)是不是指向你的github/">www.duheweb.com）是不是指向你的github</a> pages地址（如，duheweb.github.io）</p>
<p>也可以用dig</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dig www.duheweb.com +nostats +nocomments +nocmd</span><br></pre></td></tr></table></figure>

<br/>

<p>在GitHub刚创建的仓库里点“Settings” -&gt; “Pages” </p>
<p>把source 改到master，并设置域名</p>
<p><img src="https://www.duheweb.com/img/image-20210417183750443.png" alt="image-20210417183750443"></p>
<p>最好不要勾选“Enforce Https”，否则百度爬虫不能抓取网站页面。</p>
<br/>

<p>打开你的域名（如，<a href="http://www.duheweb.com),看到如下页面,表示设置成功/">www.duheweb.com），看到如下页面，表示设置成功</a></p>
<p><img src="https://www.duheweb.com/img/image-20210417184732368.png" alt="image-20210417184732368"></p>
<p>如果只生效了部分，那可能是因为缓存，Ctrl+F5强制刷新就可以了。</p>
<h1 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h1><p>现在就可以发布你的博客了</p>
<p>进入hexo文件夹内右键打开Git Bash Here</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &quot;我的测试文章&quot;</span><br></pre></td></tr></table></figure>

<p>将会在/hexo/source/_posts下创建同名的md文件，向里面添加你想发布的博客内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的测试文章</span><br><span class="line">date: 2021-04-12 13:15:54</span><br><span class="line">categories:</span><br><span class="line">	- [测试, 语法]</span><br><span class="line">tags: #文章标签 可以省略</span><br><span class="line">	- 标签1</span><br><span class="line">	- 标签3</span><br><span class="line">---</span><br><span class="line"># 标题一</span><br><span class="line">正文一1</span><br><span class="line">## 标题二</span><br><span class="line">正文二</span><br></pre></td></tr></table></figure>

<p>然后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>稍等一会儿，就可以在你的网站上看到这篇文章了</p>
<h1 id="Hexo设置"><a href="#Hexo设置" class="headerlink" title="Hexo设置"></a>Hexo设置</h1><h2 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h2><p>打开hexo下的站点配置文件_config.yml，参考下面设置你自己的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 杜和的官方网站</span><br><span class="line">subtitle: &#39;区块链|加密货币|比特币|以太坊|DeFi|Layer2|稳定币&#39;</span><br><span class="line">description: &#39;&#39;</span><br><span class="line">keywords: &#39;区块链,加密货币,比特币,以太坊,DeFi,Layer2,稳定币&#39;</span><br><span class="line">author: 杜和</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#39;&#39;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;www.duheweb.com</span><br></pre></td></tr></table></figure>
<h2 id="永久链接"><a href="#永久链接" class="headerlink" title="永久链接"></a>永久链接</h2><p>永久链接（Permalinks）即文章的URL地址</p>
<p>在站点配置文件_config.yml中，找到permalink，进行如下设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">permalink: :layout&#x2F;:year:month:day:hour:minute:second.html</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure>

<p>至于为什么这么设置，有兴趣的话请参考我的博客文章 <a href="https://www.duheweb.com/post/20210414222449.html">Hexo永久链接（Permalinks）生成方式比较</a></p>
<h1 id="NexT主题"><a href="#NexT主题" class="headerlink" title="NexT主题"></a>NexT主题</h1><p>Hexo的默认主题是landscape，不太好用。</p>
<p>NexT是hexo使用人数最多的主题，该主题共有4种可选方案，各种方案的效果请参考<br>Muse scheme: <a href="https://leaferx.online/">LEAFERx</a><br>Mist scheme: <a href="https://blog.zzbd.org/">Jeff</a><br>Pisces scheme: <a href="https://notes.iissnan.com/">Vi</a><br>Gemini scheme: <a href="https://almostover.ru/">Ivan.Nginx</a></p>
<p>个人觉得Mist最简洁实用</p>
<br/>

<p>当然也可以在github上找其他的主题，搜索 hexo-theme ，然后使用star排序即可。</p>
<br/>

<p>下面是NexT安装方法</p>
<p>在hexo根目录打开git bash</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone --branch v7.8.0 https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>

<p>下载的版本是7.8.0，如果现在有新版本的话，你也可以选择安装最新的，不过后面的设置教程对你来说可能就不完全有效了</p>
<p>下载好后，启用主题，打开站点配置文件，找到 theme 字段，并将其值更改为 next</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>启动Hexo本地站点</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>浏览器访问 <code>http://localhost:4000</code>，看到如下界面，表示安装成功</p>
<img src="https://www.duheweb.com/img/20210419134411.png" alt="image-20210419134348614" style="zoom: 67%;" />

<h2 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h2><p>更改/hexo/themes/next/下的主题配置文件_config.yml，注意其文件名与站点配置文件相同，不要混淆了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure>

<h2 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h2><p><strong>分类页面</strong><br>新建一个页面，命名为 categories 。命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>编辑刚新建的页面，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。<br>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2021-04-12 14:40:37</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><strong>标签页面</strong></p>
<p>新建「标签」页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：<br>注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2021-04-12 14:58:36</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><strong>about页面</strong></p>
<p>新建一个about页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>

<p>编辑刚新建的页面，页面内容如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于我</span><br><span class="line">date: 2021-04-13 18:14:02</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line">E-Mail: xxxx@xxx.com</span><br><span class="line">GitHub: https:&#x2F;&#x2F;github.com&#x2F;xxx</span><br></pre></td></tr></table></figure>

<p>你也可以添加其他的联系方式</p>
<p>编辑主题配置文件，找到menu</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line">  # archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br></pre></td></tr></table></figure>



<p>设置好后，在网站点击菜单就可以进入相应的页面</p>
<p><img src="https://www.duheweb.com/img/image-20210417202254935.png" alt="image-20210417202254935"></p>
<h2 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h2><p>登录 百度统计， 定位到站点的代码获取页面<br>复制 hm.js? 后面那串统计脚本 id，如：  </p>
<p><img src="https://www.duheweb.com/img/image-20210417202645604.png" alt="image-20210417202645604"></p>
<p>编辑主题配置文件，修改字段 baidu_analytics 字段，值设置成你的百度统计脚本 id。<br>稍等一下，百度才能检查出安装正确。</p>
<h2 id="网站本地搜索"><a href="#网站本地搜索" class="headerlink" title="网站本地搜索"></a>网站本地搜索</h2><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>编辑 站点配置文件，新增以下内容到任意位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>编辑主题配置文件，启用本地搜索功能：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>



<h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><p>侧边栏的默认宽度300，个人感觉太宽了，改为220。在主题配置文件中找到<code>sidebar:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">width: 220</span><br></pre></td></tr></table></figure>

<br/>

<p>侧边栏目录设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: true</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: false</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>

<br/>

<p>解决侧边栏目录里的中文标题不能跳转的问题：</p>
<p>在github下载最新的<a href="https://github.com/theme-next/hexo-theme-next/blob/master/source/js/utils.js">utils.js文件 </a> 替换本地的\hexo\themes\next\source\js\utils.js</p>
<br/>

<p>激活移动端侧边栏，这样在手机等移动设备访问时也能显示侧边栏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  onmobile: true</span><br></pre></td></tr></table></figure>

<br/>

<p>社交链接</p>
<p>编辑主题配置文件，找到social</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;duheweb || github</span><br><span class="line">  E-Mail: mailto:duheweb@163.com || envelope</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img src="https://www.duheweb.com/img/image-20210417202536896.png" alt="image-20210417202536896"></p>
<h2 id="页脚"><a href="#页脚" class="headerlink" title="页脚"></a>页脚</h2><p>使页脚不显示“Powered by Hexo &amp; NexT.Muse”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  powered: false</span><br></pre></td></tr></table></figure>

<h2 id="知识共享协议"><a href="#知识共享协议" class="headerlink" title="知识共享协议"></a>知识共享协议</h2><p>知识共享协议的6种主要授权条款：</p>
<p><img src="https://www.duheweb.com/img/image-20210417203751120.png" alt="image-20210417203751120"></p>
<p>编辑主题配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by</span><br><span class="line">  sidebar: false</span><br><span class="line">  post: true</span><br><span class="line">  language: deed.zh</span><br></pre></td></tr></table></figure>

<p>这样在博客末尾将会显示如下信息</p>
<p><img src="https://www.duheweb.com/img/image-20210417203929228.png" alt="image-20210417203929228"></p>
<h2 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h2><p>默认的字体大小为1，感觉太大了，改为0.9</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size: 0.9</span><br></pre></td></tr></table></figure>

<h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><p>Hexo可用的评论系统有很多，如下：<br>来必力：<a href="https://livere.com/">https://livere.com</a> （需要邮箱注册，加载慢，较卡顿）<br>畅言： <a href="http://changyan.kuaizhan.com/">http://changyan.kuaizhan.com</a> （安装需要备案号）<br>Gitment： <a href="https://github.com/imsun/gitment">https://github.com/imsun/gitment</a> （加载慢，有Bug）<br>Valine: <a href="https://github.com/xCss/Valine">https://github.com/xCss/Valine</a> (简约，实用，使用Leancloud作为线上数据库）</p>
<br/>

<p>国内来说最好用的是Valine，读者发表评论不用登录，比较方便</p>
<p>下面是安装方法</p>
<p>注册<a href="https://www.leancloud.cn/">LeanCloud</a><br>注册好后，创建一个新的应用，随便取个名字<br>应用创建完成，点开配置按钮<br>点击设置 -&gt; 应用Key，复制App ID 和 App Key<br>点击设置 &gt; 安全中心，把自己博客网址添加到安全中心，保证数据的调用安全。</p>
<p>我添加了如下的地址</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;duheweb.com</span><br><span class="line">http:&#x2F;&#x2F;www.duheweb.com</span><br><span class="line">https:&#x2F;&#x2F;duheweb.com</span><br><span class="line">https:&#x2F;&#x2F;www.duheweb.com</span><br><span class="line">https:&#x2F;&#x2F;duheweb.github.io</span><br><span class="line">http:&#x2F;&#x2F;localhost:4000</span><br></pre></td></tr></table></figure>

<p>修改主题配置文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: HArUIOEF0wKLx5JXm878EEAu-gzGzoHsz</span><br><span class="line">  appkey: viDxUTrkOOhazWEGkpdlS6iE</span><br><span class="line">  notify: true # Mail notifier</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: 欢迎交流讨论...昵称、邮箱、网址都可不填 # Comment box placeholder</span><br><span class="line">  avatar: mm # Gravatar style</span><br><span class="line">  guest_info: nick,mail,link # Custom comment header</span><br><span class="line">  pageSize: 10 # Pagination size</span><br><span class="line">  language: zh-cn # Language, available values: en, zh-cn</span><br><span class="line">  visitor: false # Article reading statistic</span><br><span class="line">  comment_count: true # If false, comment count will only be displayed in post page, not in home page</span><br><span class="line">  recordIP: true # Whether to record the commenter IP</span><br><span class="line">  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span><br><span class="line">  #post_meta_order: 0</span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">active: valine</span><br></pre></td></tr></table></figure>

<p>设置成功后，交付在博客末尾看到如下的评论框</p>
<p><img src="https://www.duheweb.com/img/image-20210417204926383.png" alt="image-20210417204926383"></p>
<p>如果你按照上面的方法设置好后，还是看不到评论框，那么可能是你按照网上某些教程的方法设置了cdn以加速valine，在主题配置中把valine相关的cdn注释掉就好，比如我的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># valine: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;valine@1&#x2F;dist&#x2F;Valine.min.js</span><br><span class="line"># valine: &#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;valine&#x2F;1.3.10&#x2F;Valine.min.js</span><br><span class="line"># valine: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;valine@1.3.4&#x2F;dist&#x2F;Valine.min.js</span><br></pre></td></tr></table></figure>



<p>还要注意主题配置中的leancloud_visitors不要激活，会与valine冲突</p>
<p>这样才是对的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: false</span><br></pre></td></tr></table></figure>

<br/>

<p>评论成功后，在LeanCloud相应的表里能看新插入的数据，可以删除编辑：</p>
<p><img src="https://www.duheweb.com/img/image-20210417205517229.png" alt="image-20210417205517229"></p>
<br/>

<br/>



<h1 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h1><p>现在网站还没有被搜索引擎收录，比如用百度搜索 <code>site:www.duheweb.com</code>，出现如下的结果</p>
<p><img src="https://www.duheweb.com/img/image-20210417210035423.png" alt="image-20210417210035423"></p>
<p>谷歌等搜索引擎同样如此，需要进行SEO优化</p>
<br/>

<p>生成sitemap文件，需要两种hexo插件，</p>
<p>hexo-generator-sitemap供谷歌使用；</p>
<p>hexo-generator-baidu-sitemap则是针对百度。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save-dev</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure>

<p>安装完成后，重启hexo，执行hexo g后，在public目录下生成对应的xml文件。</p>
<p>本地可以通过下面地址访问到sitemap文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:4000&#x2F;sitemap.xml</span><br><span class="line">http:&#x2F;&#x2F;localhost:4000&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>

<p>确认可以访问到后，部署到网站</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>确认可以通过你的网站URL访问，比如我的是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;sitemap.xml</span><br><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>

<h2 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h2><p>很多人都说github pages禁止了百度爬虫，但我实际用百度的“抓取诊断“测试过，是可以抓取的</p>
<p><img src="https://www.duheweb.com/img/image-20210417232912383.png" alt="image-20210417232912383"></p>
<p>所以没必要把github pages备份到coding、Vercel (之前也叫 Zeit 或 now.sh)等平台，直接进行下面的操作，过段时间百度即会收录你的github pages：</p>
<br/>

<p>进入<a href="https://ziyuan.baidu.com/site/">百度站点管理</a>添加你的网站</p>
<p>添加网站主要障碍在第二步的验证，方式有三：文件、html标签和cname。由于hexo会在生成编译文件的过程中，修改html文件内容，导致百度验证失败，因此，不建议再踩一遍这个坑。<br>由于域名是我在万网上注册的，所以选择cname的方式。过程如下：</p>
<p>到万网添加解析记录，类型为CNAME，填写表单，两项必填：<br>主机：就是他给你的带有自身网站后缀的域名<br>记录值：ziyuan.baidu.com</p>
<p>完成操作后回到百度点击“完成验证”按钮。</p>
<br/>

<br/>

<p><strong>提交sitemap</strong></p>
<p>按照提示的格式添加自己的sitemap文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>

<p><img src="https://www.duheweb.com/img/image-20210417211222711.png" alt="image-20210417211222711"></p>
<p><strong>新增蜘蛛协议</strong><br>新建robots.txt文件，添加以下文件内容，把robots.txt放在hexo站点的source文件下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># hexo robots.txt</span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;post&#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;tags&#x2F; </span><br><span class="line">Allow: &#x2F;resources&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line">Disallow: &#x2F;vendors&#x2F;</span><br><span class="line">Disallow: &#x2F;fancybox&#x2F;</span><br><span class="line"></span><br><span class="line">Sitemap: https:&#x2F;&#x2F;www.duheweb.com&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;www.duheweb.com&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>

<p>部署后在这里能看到 <a href="https://www.duheweb.com/robots.txt">https://www.duheweb.com/robots.txt</a><br>然后去百度站长平台检测robots文件是否生效。</p>
<p><strong>主动提交链接</strong></p>
<p>在百度站长平台找到自己推送接口的token：</p>
<p><img src="https://www.duheweb.com/img/image-20210417211529663.png" alt="image-20210417211529663"></p>
<p>在Hexo根目录下插件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<p>然后，同样在根目录下，把以下内容配置到站点配置文件_config.yml中:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 1 ## 提交最新的一个链接</span><br><span class="line">  host: www.duheweb.com ## 在百度站长平台中注册的域名</span><br><span class="line">  token: your_token ## 请注意这是您的秘钥，所以请不要把博客源代码发布在公众仓库里!</span><br><span class="line">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br></pre></td></tr></table></figure>

<p>其次，记得查看站点配置文件_config.yml中url的值， 必须包含是百度站长平台注册的域名（一般有www）， 比如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">url: https:&#x2F;&#x2F;www.duheweb.com</span><br><span class="line">permalink: :layout&#x2F;:title.html</span><br></pre></td></tr></table></figure>

<p>最后，加入新的deployer:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git ## 这一条是原来有的，但在前面加了个 -, 不然会报错的</span><br><span class="line">  repo: git@github.com:duheweb&#x2F;duheweb.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">- type: baidu_url_submitter   ## 这一条是新加的  注意前面有个 -, 不然会报错的</span><br></pre></td></tr></table></figure>

<p>这样执行 hexo generate 时，会在 public/baidu_urls.txt 这个文本文件保存最新的链接；执行 hexo deploy 时，会从上述文件中读取链接提交到百度。</p>
<p><img src="https://www.duheweb.com/img/image-20210417211818711.png" alt="image-20210417211818711"></p>
<p>可以看出，成功推送了1条 url，当天剩余可推送 url 还有 2999条。</p>
<p>上面这些都设置成功后，一般不会立刻收录生效，稍等几天再来看看。</p>
<h2 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h2><p>打开<a href="https://www.google.com/webmasters/verification/home">谷歌站长工具</a> 注意别打开错了，谷歌搜索控制台（search-console）是找不到用CNAM进行验证的入口的。</p>
<p>点“添加属性”，输入你的网址，然后</p>
<p><img src="https://www.duheweb.com/img/image-20210417222912383.png" alt="image-20210417222912383"></p>
<p><img src="https://www.duheweb.com/img/image-20210417212912383.png" alt="image-20210417212912383"></p>
<p>剩下的操作同百度</p>
<p>打开<a href="https://search.google.com/search-console?hl=zh-CN">谷歌搜索控制台</a> </p>
<p>在谷歌控制台提交sitemap</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.duheweb.com&#x2F;sitemap.xml</span><br></pre></td></tr></table></figure>

<p>提交成功后，睡一觉第二天起来，谷歌搜索下自己的博客发现已经可以搜索到了。</p>
<p><img src="https://www.duheweb.com/img/image-20210417212812383.png" alt="image-20210417212812383"></p>
<h2 id="必应收录"><a href="#必应收录" class="headerlink" title="必应收录"></a>必应收录</h2><p>必应收录也是很简单，点击<a href="https://www.bing.com/webmaster/home/mysites">必应站长</a></p>
<p>先注册登录，然后选择使用谷歌搜索控制台导入过去</p>
<p><img src="https://www.duheweb.com/img/image-20210417212918424.png" alt="image-20210417212918424"></p>
<p>然后就不用理，必应收录也挺快的，我上午在必应导入网站，下午就可以搜索出来了</p>
<p><img src="https://www.duheweb.com/img/image-20210417212934065.png" alt="image-20210417212934065"></p>
<p>新文章的收录，必应比谷歌还快，头天晚上发表的博客，第二天早上必应就可以搜索出来了</p>
<p><img src="https://www.duheweb.com/img/image-20210417212952536.png" alt="image-20210417212952536"></p>
<h2 id="搜狗收录"><a href="#搜狗收录" class="headerlink" title="搜狗收录"></a>搜狗收录</h2><p>打开<a href="http://zhanzhang.sogou.com/?forceredirect=1">搜狗站长</a></p>
<p><img src="https://www.duheweb.com/img/image-20210417213051135.png" alt="image-20210417213051135"></p>
<p><img src="https://www.duheweb.com/img/image-20210417213100880.png" alt="image-20210417213100880"></p>
<p>根据指示下载验证文件后，将下载的文件放在博客根目录下的 source 文件夹下</p>
<p>部署后可以在<code>https://www.duheweb.com/sogousiteverification.txt</code>访问这个文件，看到里面的验证码。</p>
<p>返回搜狗，点击“完成验证”即可。</p>
<h2 id="SEO高级优化"><a href="#SEO高级优化" class="headerlink" title="SEO高级优化"></a>SEO高级优化</h2><h3 id="keywords-和-description"><a href="#keywords-和-description" class="headerlink" title="keywords 和 description"></a>keywords 和 description</h3><p>在hexo工程根目录下的\scaffolds\post.md中添加如下代码，用于生成的文章中添加关键字和描述。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keywords:</span><br><span class="line"></span><br><span class="line">description:</span><br></pre></td></tr></table></figure>

<h3 id="给出站链接添加-“nofollow”-标签"><a href="#给出站链接添加-“nofollow”-标签" class="headerlink" title="给出站链接添加 “nofollow” 标签"></a>给出站链接添加 “nofollow” 标签</h3><p>网络爬虫可能在搜索当前页面的所有链接时，跳到别的网站回不来了。因此，需要nofollow标签发挥作用。<br>nofollow标签是由谷歌领头创新的一个“反垃圾链接”的标签，并被百度、yahoo等各大搜索引擎广泛支持，引用nofollow标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上带有nofollow属性的任何出站链接，以减少垃圾链接的分散网站权重。</p>
<p>安装nofollow插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-autonofollow --save</span><br></pre></td></tr></table></figure>

<p>该插件会将博客中的出站链接自动加上nofollow属性，例外请在站点配置文件_config.xml中添加如下字段</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nofollow:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">  - www.zhihu.com</span><br></pre></td></tr></table></figure>

<p>exclude - 域名白名单，不同的子域名视为不同的域名，如exclude1.com不包括 <a href="http://www.exclude1.com/">www.exclude1.com</a> 或 en.exclude1.com</p>
<p>这样，例外的链接将不会被加上nofollow属性。</p>
<p>效果如图</p>
<p><img src="https://www.duheweb.com/img/image-20210417213511169.png" alt="image-20210417213511169"></p>
<h1 id="Hexo进阶"><a href="#Hexo进阶" class="headerlink" title="Hexo进阶"></a>Hexo进阶</h1><p>至此，个人博客网站就算是搭建好了，想进一步优化的话，请参考我其它博客文章。</p>
<p>如果你感觉用Markdown编辑器插入的图片不方便部署到网站上的话，参考 <a href="https://www.duheweb.com/post/20210421125522.html">GitHub Pages +  PicGo + Typora + 自定义域名搭建免费图床</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
